{
  "hash": "474d245f6c85196e806593f600ad3682",
  "result": {
    "markdown": "---\ntitle: \"Approaches for Modeling Mortality Using Life-Table Data\"\nauthor: John Graves\ndate: \"2023-03-28\"\noutput:\n  tufte::tufte_html: default\n  tufte::tufte_handout:\n    citation_package: natbib\n    latex_engine: xelatex\n  tufte::tufte_book:\n    citation_package: natbib\n    latex_engine: xelatex\neditor_options: \n  chunk_output_type: console\nexecute:\n  echo: true\n  message: false\n  warning: false  \n  code-fold: true\n  cache: true\nreference-location: margin\nself-contained: true\n---\n\n\n# Introduction\n\nThis document outlines how to model mortality using a gompertz model fit to life table data.\n\n-   The inspiration for much of the modeling code can be found [here](https://github.com/scpatricio/bell_mortality)\n-   In general, Gompertz and Gompertz-Makeham models only work for adults, given the wonkiness of mortality in younger ages.\n    -   [Here](https://link.springer.com/referenceworkentry/10.1007/978-3-319-69892-2_556-1) is a nice primer on mortality modeling using several mixtures.\n    -   [Here](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8941647/) is one approach to model under-five mortality.\n-   Fernando has a nice paper noting that clinical trials often estimate a hazard ratio for death for overall all-cause death, not disease specific death. What does that mean for modeling?\n    -   [Source](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7024667/)\n\n\n::: {.cell hash='gompertz-mortality_cache/html/setup_03e137d2cab3b24e5aa1aa36c47ffa81'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(flexsurv)\nlibrary(survival)\nlibrary(demography)\nlibrary(fmsb)\nlibrary(here)\n```\n:::\n\n\n# Fit a Gompertz and Gompertz-Makeham Model to US Adult Life Expectancy Data\n\n## Download the data from the Human Mortality Database\n\n\n::: {.cell hash='gompertz-mortality_cache/html/unnamed-chunk-1_77f06f48b0f9cd4f2d08b2d57c14affd'}\n\n```{.r .cell-code}\nhmd.usa <- demography::hmd.mx(\"USA\",\"<USER NAME (email)>\", \"<PASSWORD>\",\"USA\")\nwrite_rds(hmd.usa,file=here(\"blog/posts/cause-deleted-life-tables/data/usa-life-table.rds\"))\n```\n:::\n\n::: {.cell hash='gompertz-mortality_cache/html/unnamed-chunk-2_59447768f08f5d242f24dbc340bbf907'}\n\n```{.r .cell-code}\nhmd.usa <- read_rds(here(\"blog/posts/cause-deleted-life-tables/data/usa-life-table.rds\"))\n\nlt <-  # Construct a life-table for 2010 mortality \n  demography::lifetable(hmd.usa,series = \"male\", years = 2010) %>% \n  as_tibble() %>% \n  mutate_at(vars(lx,dx), function(x) x*100000)\n\n# Restrict the estimation sample to only 30-99 year olds. \nlt_a <- lt  %>% filter(x<100) %>% \n  filter(x>30 & x<100)\n```\n:::\n\n\n## Define various functions\n\n\n::: {.cell hash='gompertz-mortality_cache/html/functions_223d0e42a47f671684c1c0bba325eaaf'}\n\n```{.r .cell-code}\n# SOURCE: https://github.com/scpatricio/bell_mortality\n# Here, however, I'm just using the negative binomial rather than the bell distribution code. \n\n# Gompertz\ngompertz = function(t, theta){\n    a = theta[1]\n    b = theta[2]\n    \n    return(a*exp(b*t))\n}\n\n\n  \n# Gompertz-Makeham\nmakeham = function(t, theta){\n    a = theta[1]\n    b = theta[2]\n    c = theta[3]\n    \n    return(a*exp(b*t)+c)\n}\n\nseries = function(j, phi){\n    out = NULL\n    \n    for(i in 1:length(j)){\n        out[i] = sum(log(0:(j[i]-1) + phi))\n    }\n    \n    return(out)\n}\n\nlogLike_NB = function(theta, Dx, Ex, mu, t){ # negative binomial\n    theta = abs(theta)\n    phi = theta[1]\n    \n    lamb = Ex*mu(t, theta[-1])\n    \n    log_lik = series(Dx, phi) +Dx*log(lamb)-(Dx+phi)*log(phi+lamb)+phi*log(phi)\n    \n    return(-sum(log_lik, na.rm = T))\n}\n\n# E1 function\nE1 = function(z){\n    integrate(function(t){\n        (exp(-t))/t\n    }, z, Inf)$value\n}\n\nex_gomp = function(t, a, b){\n    exp(a*exp(b*t)/b)*E1(a*exp(b*t)/b)/b\n}\n\n# Gompertz-Makeham\nGamma_Inc_sup = function(s, z){\n    integrate(function(t){\n        t^(s-1)*exp(-t)\n    }, z, Inf)$value\n}\n\nex_mak = function(t, a, b, c){\n    (exp(a*exp(b*t)/b)/b)*((a*exp(b*t)/b)^(c/b))*Gamma_Inc_sup(-c/b,a*exp(b*t)/b)\n}\n```\n:::\n\n::: {.cell hash='gompertz-mortality_cache/html/unnamed-chunk-3_c6028d38020d0034fe0e2ab4999d9435'}\n\n```{.r .cell-code}\nnb_estim_gompertz = abs(optim(par = c(1, 0.001, 0.2),\n                     fn = logLike_NB,\n                     Ex = lt_a$lx,\n                     Dx = lt_a$dx,\n                     mu = gompertz,\n                     t = lt_a$x-30)$par)\n\n\nnb_estim_makeham = abs(optim(par = c(1, 0.001, 0.1, 0.001),\n                     fn = logLike_NB,\n                       Ex = lt_a$lx,\n                       Dx = lt_a$dx,\n                       mu = makeham,\n                       t = lt_a$x-30)$par)\n\n\n  \n# Predicted Mortality Rates\n\nlt_a$pr_gomp_nb = log(gompertz(lt_a$x-30,nb_estim_gompertz[-1]))\nlt_a$pr_makeham_nb = log(makeham(lt_a$x-30,nb_estim_makeham[-1]))\n\nlt %>% \n  ggplot(aes(x = x, y = log(qx))) + geom_point() +\n  hrbrthemes::theme_ipsum() + \n  geom_line(data = lt_a %>% \n  select(x,starts_with(\"pr_\")) %>% \n  gather(method,y,-x), aes(x=x,y=y,colour=method)) \n```\n\n::: {.cell-output-display}\n![](gompertz-mortality_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n# Old Approach\n\n\n::: {.cell hash='gompertz-mortality_cache/html/unnamed-chunk-4_fd08cdc5a7b74222fa0e86f51072a795'}\n\n```{.r .cell-code}\n# Expand to full data frame\ndeaths.long <- data.frame(Age=rep(lt$x, round(lt$dx)))\ndeaths.long$Death <- 1\nhead(deaths.male.long)\n\n\nparameters = data.frame(\n  Age = 0:100,\n  shape=rep(NA,101),\n  rate=rep(NA,101)\n)\n\nfor(age in 0:100)\n{\n  print(age)\n  surv.data <- with(deaths.long[deaths.long$Age >= age,], Surv(Age, Death, origin=age))\n  surv.model <- flexsurvreg(surv.data ~ 1, dist=\"gompertz\")\n\n  parameters$shape[age+1] <- surv.model$coefficients[1]\n  parameters$rate[age+1] <- exp(surv.model$coefficients[2])\n}\n\nparameters[31,]\n\na = parameters$shape[31]\nb = parameters$rate[31]\nt = 0\nrate <- (b/a) * (exp(a*t) - exp(a*(t-1)))\n\ngompertz(0,nb_estim_gompertz[-1])\n```\n:::\n\n\n# Background\n\n::: callout-note\nNote: the following was generated by chatGPT to discuss various way to model mortality--it's useful but will need to be vetted!\n:::\n\nThere are several approaches to modeling adult mortality, including Gompertz models, Gompertz-Makeham models, and Lee-Carter models.\n\nThe Gompertz model is a widely used parametric model that assumes that the rate of mortality increases exponentially with age. The formula for the Gompertz model is given by:\n\n$$\n\\mu(x)=A \\exp (B x)\n$$\n\nwhere $\\mu(x)$ is the mortality rate at age $x$, $A$ and $B$ are constants, and $\\exp$ is the exponential function. The Gompertz model is relatively simple and easy to interpret, but it assumes that mortality rates increase indefinitely with age, which is not always true.\n\nThe Gompertz-Makeham model is an extension of the Gompertz model that adds a constant term to account for mortality risks not related to age, such as accidents or infections. The formula for the Gompertz-Makeham model is given by:\n\n$$\n\\mu(x)=A \\exp (B x)+C\n$$\n\nwhere $\\mu(x)$, $A$, $B$, and $\\exp$ are the same as in the Gompertz model, and $C$ is a constant. The Gompertz-Makeham model provides a better fit to mortality data than the Gompertz model alone, but it still assumes that mortality rates increase indefinitely with age.\n\nThe Lee-Carter model is a non-parametric approach that uses a principal component analysis (PCA) to capture the main trends in mortality data over time. The Lee-Carter model assumes that the logarithm of the mortality rate follows a linear trend plus a time-varying factor that captures the main sources of variability in mortality. The formula for the Lee-Carter model is given by:\n\n$$\n\\log (\\mu(x, t))=\\alpha(x)+\\beta(x) k(t)+\\epsilon(x, t)\n$$\n\nwhere $$\nk(t)=\\sum_{i=1}^r \\phi_i \\xi_i(t)\n$$\n\nand $$\n\\xi_i(t)=\\frac{u_i(t)}{\\sqrt{\\lambda_i}}\n$$\n\nIn the Lee-Carter model, $\\mu(x,t)$ is the mortality rate at age $x$ and time $t$, $\\alpha(x)$ and $\\beta(x)$ are age-specific constants, $k(t)$ is a time-specific factor obtained through PCA, and $\\epsilon(x,t)$ is a random error term. The Lee-Carter model allows for changes in mortality rates over time and can capture both age-specific and time-specific effects on mortality.\n\n## Lee-Carter vs. Gompertz / Gompertz-Makeham\n\nThe Lee-Carter (LC) model, Gompertz model, and Gompertz-Makeham model are all used for forecasting mortality rates, but they differ in their assumptions and applications.\n\nThe Gompertz model assumes that mortality rates increase exponentially with age, and has been widely used for modeling mortality in various contexts. The Gompertz-Makeham model extends the Gompertz model by adding a constant term (the Makeham term) to account for mortality risk factors that are independent of age, such as genetic or environmental factors. The Gompertz and Gompertz-Makeham models are relatively simple and computationally efficient, but they may not capture more complex mortality patterns, such as mortality trends or cohort effects.\n\nThe LC model, on the other hand, allows for more flexible and nuanced modeling of age-specific mortality trends over time. It assumes that a common factor, k(t), influences mortality rates at all ages, and estimates age-specific deviations from this factor using historical mortality data. This allows for capturing trends and changes in mortality rates that are not explained by age alone.\n\nIn terms of forecasting performance, studies have found that the LC model generally outperforms the Gompertz and Gompertz-Makeham models, particularly for longer forecast horizons and for populations with more complex mortality patterns. However, the choice of model may depend on the specific research question, the data available, and the trade-off between model complexity and forecasting accuracy.\n\nOverall, while the Gompertz and Gompertz-Makeham models are simpler and computationally efficient, the LC model offers more flexibility and accuracy for modeling and forecasting mortality rates, particularly in populations with complex mortality patterns.\n\nIn summary, Gompertz models, Gompertz-Makeham models, and Lee-Carter models are all used to model adult mortality, but they differ in their assumptions and complexity. The Gompertz model is the simplest but assumes that mortality rates increase indefinitely with age, while the Gompertz-Makeham model adds a constant term to account for other mortality risks but still assumes infinite mortality rates. The Lee-Carter model is non-parametric and can capture changes in mortality rates over time and age-specific and time-specific effects on mortality.\n\n# Playing Around with the MortalityLaws R Package\n\n\n\n::: {.cell hash='gompertz-mortality_cache/html/unnamed-chunk-5_c97bd2e7d4ddbf435b474590e6dbc152'}\n\n```{.r .cell-code}\n# devtools::install_github(\"mpascariu/MortalityLaws\")\nlibrary(MortalityLaws)\n# MortalityLaws::availableLaws(law=NULL)\n\nyear     <- 2010\nages     <- 31:99\ndeaths   <- lt_a$dx\nexposure <- lt_a$lx\nfit <- MortalityLaw(x   = ages,\n                    Dx  = deaths,   # vector with death counts\n                    Ex  = exposure, # vector containing exposures\n                    law = \"makeham\",\n                    opt.method = \"LF1\")\nplot(fit)\n```\n\n::: {.cell-output-display}\n![](gompertz-mortality_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## Heligman-Pollard model\n\n(Description from ChatGPT) \n\nThe Heligman-Pollard model is a statistical model for mortality modeling that is widely used in actuarial science and demography. The model was first proposed by Nathan Keyfitz in 1977 and later extended by Kenneth Heligman and Edward Pollard in 1980.\n\nThe model expresses the relationship between mortality rates and age in a mathematical form, and it can be used to estimate the probability of death for individuals at different ages. The basic assumption of the model is that mortality rates decline at a decreasing rate with increasing age, and that there is a certain amount of randomness in the mortality data.\n\nThe Heligman-Pollard model can be expressed in the following form:\n\n$$\nlog(m(x)) = a(x) + b(x)*k\n$$\n\nwhere:\n\n- $m(x)$ is the mortality rate at age x.\n- $a(x)$ and $b(x)$ are age-specific parameters that describe the level and shape of the mortality curve, respectively.\n- $k$ is a constant parameter that controls the rate at which the mortality curve declines with increasing age.\n\nThe model can be estimated using regression techniques, and the estimated parameters can be used to calculate the probability of death at different ages.\n\nThe Heligman-Pollard model has been widely used in actuarial science and demography for mortality forecasting, life insurance pricing, and pension plan design. It is a flexible and robust model that can be easily applied to different populations and time periods. However, like any statistical model, the Heligman-Pollard model has its limitations and should be used with caution.\n\n\n\n::: {.cell hash='gompertz-mortality_cache/html/unnamed-chunk-6_e2c1909e16ebe85892d784ccaf473e4e'}\n\n```{.r .cell-code}\nyear     <- 2010\nages     <- lt$x\ndeaths   <- lt$dx\nexposure <- lt$lx\nfit <- MortalityLaw(x   = ages,\n                    Dx  = deaths,   # vector with death counts\n                    Ex  = exposure, # vector containing exposures\n                    law = \"HP2\",\n                    opt.method = \"LF2\")\nplot(fit)\n```\n\n::: {.cell-output-display}\n![](gompertz-mortality_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nget_mort <- function(x,params) {\n  with(as.list(params),{\n    mu1 <-  A^((x + B)^C) + (G * H^x)/(1 + G * H^x)\n    mu2 <-  D * exp(-E * (log(x/F_))^2)\n    ifelse(x == 0, mu1, mu1 + mu2)\n  })\n}\n\nplot(lt$x,log(lt$qx))\npoints(lt$x,log(get_mort(lt$x,fit$coefficients)),col=\"blue\")\n```\n\n::: {.cell-output-display}\n![](gompertz-mortality_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n:::\n\n::: {.cell hash='gompertz-mortality_cache/html/unnamed-chunk-7_e1dd1652ecaecc57e714bcdc766a7dfe'}\n\n```{.r .cell-code}\nget_mort(lt$x,fit$coefficients)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] 0.0066864860 0.0005582469 0.0002885961 0.0002003338 0.0001602317\n  [6] 0.0001397381 0.0001292190 0.0001245984 0.0001239791 0.0001267321\n [11] 0.0001335566 0.0001468856 0.0001709979 0.0002113375 0.0002730405\n [16] 0.0003591946 0.0004695373 0.0006000746 0.0007436868 0.0008914307\n [21] 0.0010340905 0.0011635680 0.0012738498 0.0013614663 0.0014254900\n [26] 0.0014671988 0.0014895519 0.0014966070 0.0014929770 0.0014833808\n [31] 0.0014723136 0.0014638355 0.0014614635 0.0014681448 0.0014862880\n [36] 0.0015178311 0.0015643293 0.0016270496 0.0017070630 0.0018053301\n [41] 0.0019227758 0.0020603539 0.0022191009 0.0024001804 0.0026049204\n [46] 0.0028348439 0.0030916956 0.0033774656 0.0036944110 0.0040450775\n [51] 0.0044323206 0.0048593287 0.0053296466 0.0058472025 0.0064163357\n [56] 0.0070418283 0.0077289396 0.0084834424 0.0093116644 0.0102205308\n [61] 0.0112176119 0.0123111730 0.0135102275 0.0148245938 0.0162649540\n [66] 0.0178429163 0.0195710783 0.0214630928 0.0235337337 0.0257989620\n [71] 0.0282759903 0.0309833444 0.0339409200 0.0371700327 0.0406934588\n [76] 0.0445354625 0.0487218087 0.0532797540 0.0582380149 0.0636267047\n [81] 0.0694772366 0.0758221847 0.0826950989 0.0901302648 0.0981624054\n [86] 0.1068263163 0.1161564314 0.1261863140 0.1369480733 0.1484717061\n [91] 0.1607843674 0.1739095788 0.1878663864 0.2026684850 0.2183233315\n [96] 0.2348312738 0.2521847294 0.2703674475 0.2893538944 0.3091088018\n[101] 0.3295869150\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}