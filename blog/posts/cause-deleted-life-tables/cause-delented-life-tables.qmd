---
title: "Cause-Deleted Life Tables"
editor_options: 
  chunk_output_type: console
---

```{r setup}
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(glue)
library(here)
library(knitr)
library(kableExtra)
options("scipen" = 100, "digits" = 5)
edit.na <- function(x, value) { x[is.na(x)] <- value; x}
```


# Introduction 

[Code inspiration](https://grodri.github.io/demography/neoplasms)
[Additional code](http://www.ub.edu/rfa/R/life_tables.html)

# Construct a Life Table

```{r}
#| echo: true
#| message: false
#| warning: false
#| tbl-cap: Life Table
#| label: tbl-life-table
#| code-fold: true

# Source URL: https://grodri.github.io/demography/periodlt
url <- "https://grodri.github.io/datasets/preston31.dat"
b31 <- read.table(url, header=FALSE)
names(b31) = c("age","N","D")
b31 <- b31_ <- 
    b31 %>% 
    inner_join(haven::read_dta("https://grodri.github.io/datasets/kfnax.dta"), kfnax, by="age") %>% 
    mutate(n = c(diff(age),0),
           m = D / N) %>% 
    rename(a = nax) 

cond <- rep(b31[1,"m"] >= 0.107, 2) # condition must be a vector here
b31[1:2,"a"] <- ifelse(cond, c(0.330, 1.352) ,
  b31[1:2,"a"] <- c(0.045, 1.651) + c(2.684, -2.816)* b31[1,"m"])
last <- nrow(b31)
b31[last,"a"] <- 1/ b31[last,"m"]
b31 <- b31 %>% 
    mutate(q = n * m/(1 + (n - a) * m), p = 1 - q)
b31[last, c("q","p")] = c(1,0)
b31 <- 
    b31 %>% 
    mutate(lx = 100000 * cumprod( c(1, p[-last])),
           d = c(-diff(lx), lx[last]),
           L =  (lx - d) * n +  d * a) %>% 
    mutate(T = sum(L) - cumsum(L) + L,
           e = T/lx)

b31 %>% 
    kable() %>% 
    kable_styling()

```

# Construct a Cause-Deleted Life Table

```{r}
#| echo: true
#| message: false
#| warning: false
#| tbl-cap: Deaths for all causes and from neoplasms for U.S. females in 1991 
#| label: tbl-data-head
#| code-fold: true
url = "https://grodri.github.io/datasets/preston41.dat"
b41 <- read.table(url, header=FALSE)
names(b41) <- c("age","D","Di","lx","a")

# age = age
# D = number of deaths
# Di = number of neoplasm deaths
# lx = number of individuals alive
# a = {a}_n_{x} Nax is the average number of years lived in the x to x + n age interval by those dying 
#      in the interval. It is calculated as follows: Nax = 1/n * (Lx + Lx+1 + ... + Lx+n) where Lx 
#      is the number of people surviving to age x, and n is the interval of the age group.
#      Nax is an important measure of mortality, as it indicates how many years people are expected 
#      to live after reaching a certain age.
# qx = death rate at age x
# mux = force of mortality at age x

df <- 
    b41 %>% 
    mutate(q = edit.na(1 - lead(lx) / lx, 1),   # this causes the last value to be one
           
           qi = q * Di / D, # The conditional probability of dying of a given cause given survival to the age group 
                            # is easy to obtain, we just multiply the overall probability by the ratio of deaths of 
                            # a given cause to all deaths
           
           d = lx * q,      # The unconditional counts of deaths of any cause and of a given cause are calculated
                            # multiplying by the number surviving to the start of each age group, which is lx.
                            # Recall that to die of cause i in the interval [x, x+n) one must survive all causes up to age x.
           di = lx * qi) %>% 
    mutate( # Calculate survival function assuming constant hazard within age groups.
        n = c(diff(age),NA), 
        m = edit.na(q / (n - q * (n - a)), 1 / tail(a,1)) # m[last] = 1/a[last]
    ) %>% 
    mutate( # Compute cumulative hazard and survival 
        H = cumsum(n * m), 
        S = edit.na(exp(-lag(H)),1) # S[1]= 1
    ) %>% 
    mutate(P = edit.na((S - lead(S))/m, tail(S/m,1)))

df %>% head(n=19) %>% 
    kable() %>% 
    kable_styling()
```

We obtain ```r round(sum(df$di))``` deaths due to neoplasms and a life-expectancy of ```r round(sum(df$P),2)``` years.

## Cause-Deleted Life Tables: Approach 1

What would things look like if deaths due to neoplasms could be avoided?

```{r}
#| echo: true
#| message: false
#| warning: false
#| code-fold: true
#| code-summary: Calculate life expectancy without deaths due to neoplasms. 
df_ <- 
    df %>% 
    mutate(Rd = (D - Di) / D, 
           md = m * Rd) %>% 
    mutate( # now construct a survival function, but treating 
            # the hazard md as if its the only one operating
        Hd = cumsum(n * md), 
        Sd = edit.na(exp(-lag(Hd)),1)
    ) %>% 
    mutate(Pd = edit.na((Sd - lead(Sd))/md, tail(Sd/md,1)))
```

This changes life-expectancy to ```r round(sum(df_$Pd),2)``` years. Note that this is under a (strong) assumption of independence among the competing causes. 

## Cause-Deleted Life Tables: Approach 2

This is based on Chiang's method. This method assumps proportionality of cause-specific hazards within an age group (which as the textbook notes, is weaker than the constant risk assumption used above). 


```{r}
#| echo: true
#| message: false
#| warning: false
#| code-fold: true
#| code-summary: Calculate life expectancy without deaths due to neoplasms. 
df2_ <-
    df_ %>%
    mutate(pd = (1 - q) ^ Rd,
           ld = 100000 * cumprod(c(1, pd[-length(pd)]))) %>%
    mutate(
        dd = edit.na(ld - lead(ld), tail(ld, 1)),
        qd = dd / ld,
        ad = ifelse(
            age < 10 | age == 80,
            n + Rd * (q / qd) * (a - n),
            ifelse(age >= 10 & age <= 75,
                   ((-5 / 24) * lag(dd) + 2.5 * dd + (5 / 24) * lead(dd)) / dd,
                   a / Rd)
        )
    ) %>% 
    mutate(
        Ld = edit.na(dd * ad + (ld - dd) * n,  tail(ld * ad, 1))
    )


```


This method yields a life expectancy of ```r round(df2_ %>% summarise(e0 = sum(Ld)/100000) %>% pull(e0),2)``` years. 

## Final Cause-Deleted Life Table

```{r}
#| echo: true
#| message: false
#| warning: false
#| code-fold: true
#| code-summary: Create Final Cause-Deleted Life Table. 
#| tbl-cap: Cause-Deleted Life Table After Removing Deaths From Neoplasms (1991 US Females)
#| label: tbl-final

lt <-
    df2_ %>%
    mutate(
        Td = sum(Ld) - cumsum(Ld) + Ld, 
        ed = Td / ld
    ) #%>% 
    #select(age,Rd,lx,a,ld,ad,ed)

lt %>% head(n=19) %>% 
    kable() %>% 
    kable_styling()

```


```{r}
#https://github.com/scpatricio/bell_mortality/blob/main/script/functions.R
# library(devtools)
# install_github("robjhyndman/demography")
#install.packages("HMDHFDplus")

library(demography)
library(fmsb)

# hmd.usa <- hmd.mx("USA","john.graves@vanderbilt.edu", "<PASSWORD>","USA")
# write_rds(hmd.usa,file=here("blog/posts/cause-deleted-life-tables/data/usa-life-table.rds"))

hmd.usa <- read_rds(here("blog/posts/cause-deleted-life-tables/data/usa-life-table.rds"))

min_age <- 18

lt <- demography::lifetable(hmd.usa,series = "male", years = 2010)
df_lt <-   tibble(x = lt$age,qx = lt$qx[,"2010"]) %>% 
  filter(x >= min_age); df_lt

res <- fitGM(data = lt$qx)
FLAG <- res[5]
while (FLAG>0) {
   res <- fitGM(res[1:3], lt$qx)
   FLAG <- res[5]
}
print(res)
hatA <- res[1]
hatB <- res[2]
hatC <- res[3]

# Makeham
# Gamma-Imcompleta superior
# Source: https://stats.stackexchange.com/questions/544081/gompertz-makeham-model-life-expectancy-using-numerical-integration-and-analytica
Gamma_Inc_sup = function(s, z){
  integrate(function(t){
    t^(s-1)*exp(-t)
  }, z, Inf)$value
}

ex_mak = function(t, a, b, c){
  (exp(a*exp(b*t)/b)/b)*((a*exp(b*t)/b)^(c/b))*Gamma_Inc_sup(-c/b,a*exp(b*t)/b)
}

life.expectancy(hmd.usa, years = 2010, age = 40,series = "male")
ex_mak(40,hatA,hatB,hatC)

life_exp <- 
  seq(40,90,1) %>% map_df(~{
    res1 <- ex_mak(.x,hatA,hatB,hatC)
    res2 <- life.expectancy(hmd.usa, years = 2010, age = .x,series = "male")
    out <- data.frame(lt = res2[1], gm = res1)
    out
  })


life_exp %>% 
  ggplot(aes(x = lt, y = gm)) + geom_point() + 
  geom_abline(a=0,b=1)




```


