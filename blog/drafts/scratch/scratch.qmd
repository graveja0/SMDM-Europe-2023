---
title: "Cause-Deleted Life Tables"
author: John Graves
date: "2022-12-19"
editor_options: 
  chunk_output_type: console
execute:
  echo: false
  message: false
  warning: false  
  code-fold: true
  cache: true
reference-location: margin
self-contained: true
---

```{r setup}
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(glue)
library(here)
library(knitr)
library(kableExtra)
library(MortalityLaws)
library(demography)
library(MASS)
options("scipen" = 100, "digits" = 5)
edit.na <- function(x, value) { x[is.na(x)] <- value; x}
theme_set(hrbrthemes::theme_ipsum())
select <- dplyr::select
```

# All-Cause Life Table Data

```{r, eval = FALSE}
hmd.usa <- demography::hmd.mx("USA","john.graves@vanderbilt.edu", "j@G7721JAG#","USA")
write_rds(hmd.usa,file=here("blog/posts/cause-deleted-life-tables/data/usa-life-table.rds"))
```

```{r}
hmd.usa <- read_rds(here("blog/posts/cause-deleted-life-tables/data/usa-life-table.rds"))
lt <-  # Construct a life-table for  mortality 
  demography::lifetable(hmd.usa,series = "total", years = 2021) %>% 
  as_tibble() %>% 
  mutate_at(vars(lx,dx), function(x) x*100000) %>% 
  mutate(country = "USA")
```

# Model All-Cause Mortality

```{r}


```

# Cause-Specific Deaths

```{r}
#| echo: false
#| warning: false
#| message: false
 # from cdc wonder
deaths_cvd <- 
    read.delim(here("blog/drafts/scratch/data/cardiovascular-deaths.txt")) %>% 
    janitor::clean_names() %>% 
    select(-notes) %>% 
    filter(!is.na(single_year_ages_code) & single_year_ages_code!="") %>% 
    as_tibble() %>% 
    mutate(age = as.numeric(single_year_ages_code)) %>% 
    filter(!is.na(age)) %>% 
    mutate(dx_i = 100000 * deaths / as.numeric(paste0(population))) %>% 
    select(age = single_year_ages_code,d_i = deaths,pop = population, dx_i)  %>% 
    mutate(age = as.numeric(paste0(age))) %>% 
    mutate(pop = as.numeric(paste0(pop)))

deaths_cvd %>% 
    select(age,dx_i) %>% na.omit() %>%  
    ggplot(aes(x = age, y = log(dx_i))) + geom_point()

```

Note that the death rate per 100k population is not calculated above age 85, so we need to predict it. Luckily the (log) death rate is very linear:

```{r}

min_age = 50

tmp <- 
    deaths_cvd %>% 
    filter(age >= min_age & age <= 84) 
tmp %>% 
    ggplot(aes(x = age, y = log(dx_i))) + geom_point()
```

```{r}
fit <- 
    with(tmp,lm(log(dx_i)~age))

library(mgcv)
fit <- 
    gam(log(dx_i) ~ s(age), data = tmp)

pval <- 
    predict(fit,newdata = tibble(age=min_age:100),type="response") %>% 
    exp(.) 
names(pval) <- paste0(min_age:100)

deaths_cvd_final <- 
    deaths_cvd  %>% 
    mutate(pdx_i = pval[paste0(age)]) %>% 
    mutate(dx_i = coalesce(dx_i,pdx_i)) %>% 
    rename(x = age)

```

```{r}
deaths_cvd_final %>% 
    ggplot(aes(x = x, y = log(dx_i))) + geom_point() + 
    geom_point(aes(y = log(pdx_i)), col = "red") 
```

```{r}
lt_cvd <- 
    lt %>% 
    left_join(deaths_cvd_final %>% dplyr::select(x,dx_i),"x") %>% 
    mutate(age = x) %>% 
    mutate(a = 0.5, 
           n = c(diff(age),NA)) #%>% 
    #mutate(dx_i = pmin(dx,dx_i))

lt_cvd <- 
   lt_cvd %>% 
   mutate(age = x) %>% 
   mutate(Rd = (dx - dx_i) / dx) %>% 
   mutate(pd = (1 - qx) ^ Rd,
           ld = 100000 * cumprod(c(1, pd[-length(pd)]))) %>% 
    mutate(
        dd = edit.na(ld - lead(ld), tail(ld, 1)),
        qd = dd / ld,
        ad = ifelse(
            age < 10 | age == 80,
            n + Rd * (qx / qd) * (a - n),
            ifelse(age >= 10 & age <= 75,
                   ((-5 / 24) * lag(dd) + 2.5 * dd + (5 / 24) * lead(dd)) / dd,
                   a / Rd)
        )
    ) %>% 
    mutate(
        Ld = edit.na(dd * ad + (ld - dd) * n,  tail(ld * ad, 1))
    )

```

```{r}
#| warning: false
#| message: false

# GOT HERE

get_mort <- function(x,params) {
  with(as.list(params),{
    mu1 <-  A^((x + B)^C) + (G * H^x)/(1 + G * H^x)
    mu2 <-  D * exp(-E * (log(x/F_))^2)
    ifelse(x == 0, mu1, mu1 + mu2)
  })
}

N = 100000

max_age <- 85
min_age <- 40

ages     <- lt_cvd$x[lt_cvd$x<max_age & lt_cvd$x>min_age]
deaths   <- lt$dx[lt_cvd$x<max_age & lt_cvd$x>min_age]
deaths_cvd   <- lt_cvd$dx[lt_cvd$x<max_age & lt_cvd$x>min_age] - lt_cvd$dx_i[lt_cvd$x<max_age & lt_cvd$x>min_age]
exposure <- lt$lx[lt_cvd$x<max_age & lt_cvd$x>min_age]
exposure_cvd <- lt_cvd$ld[lt_cvd$x<max_age & lt_cvd$x>min_age] 

fit <- MortalityLaw(x  = ages,
                Dx  = deaths,   # vector with death counts
                Ex  = exposure, # vector containing exposures
                law = "HP2",
                opt.method = "LF2")
plot(fit)

fit_cd <- MortalityLaw(x  = ages,
                Dx  = deaths_cvd,   # vector with death counts
                Ex  = exposure_cvd, # vector containing exposures
                law = "HP2",
                opt.method = "LF2")
plot(fit_cd)

tibble(age = ages, qx = get_mort(ages, fit$coefficients))  %>% 
    ggplot(aes(x = age, y = log(qx))) + geom_point() + 
    geom_point(data = tibble(age = ages, qx = get_mort(ages, fit_cd$coefficients)),col = "red")
```

# Historical Mortality

```{r, eval = FALSE}
hmd.usa <- demography::hmd.mx("USA","john.graves@vanderbilt.edu", "j@G7721JAG#","USA")
hmd.uk <- demography::hmd.mx("GBR_NP","john.graves@vanderbilt.edu", "j@G7721JAG#","UK")

write_rds(hmd.uk,file=here("blog/posts/cause-deleted-life-tables/data/uk-life-table.rds"))
```

```{r}
hmd.usa <- read_rds(here("blog/posts/cause-deleted-life-tables/data/usa-life-table.rds"))
hmd.uk <- read_rds(here("blog/posts/cause-deleted-life-tables/data/uk-life-table.rds"))

lt.usa <-  # Construct a life-table for  mortality 
  demography::lifetable(hmd.usa,series = "total", years = 1990:2020) %>% 
  as_tibble() %>% 
  mutate_at(vars(lx,dx), function(x) x*100000) %>% 
  mutate(country = "USA")

lt.uk <-  # Construct a life-table for  mortality 
  demography::lifetable(hmd.uk,series = "total", years = 1990:2020) %>% 
  as_tibble() %>% 
  mutate_at(vars(lx,dx), function(x) x*100000) %>% 
  mutate(country = "GBR")

lt <- 
    lt.usa %>% 
    bind_rows(lt.uk)

```

```{r}

get_mort <- function(x,params) {
  with(as.list(params),{
    mu1 <-  A^((x + B)^C) + (G * H^x)/(1 + G * H^x)
    mu2 <-  D * exp(-E * (log(x/F_))^2)
    ifelse(x == 0, mu1, mu1 + mu2)
  })
}

N = 100000

df_mort.usa <- 
    1990:2020 %>% map_df(~({
    yy <- .x
    year     <-  (lt.usa$year==yy)
    ages     <- lt.usa$x[year]
    deaths   <- lt.usa$dx[year]
    exposure <- lt.usa$lx[year]

    fit <- MortalityLaw(x  = ages,
                    Dx  = deaths,   # vector with death counts
                    Ex  = exposure, # vector containing exposures
                    law = "HP2",
                    opt.method = "LF2")
    
    tibble(year = yy, age = ages, qx = get_mort(ages, fit$coefficients)) 
})) %>% 
    mutate(country = "USA")

df_mort.uk <- 
    1990:2020 %>% map_df(~({
    yy <- .x
    year     <-  (lt.uk$year==yy)
    ages     <- lt.uk$x[year]
    deaths   <- lt.uk$dx[year]
    exposure <- lt.uk$lx[year]

    fit <- MortalityLaw(x  = ages,
                    Dx  = deaths,   # vector with death counts
                    Ex  = exposure, # vector containing exposures
                    law = "HP2",
                    opt.method = "LF2")
    
    tibble(year = yy, age = ages, qx = get_mort(ages, fit$coefficients)) 
})) %>% 
    mutate(country = "GBR")

```

```{r}
df_mort.usa %>% 
    bind_rows(df_mort.uk) %>% 
    group_by(year, country) %>% 
    mutate(p = 1 - qx)  %>% 
    mutate(cump = ifelse(row_number()==1,1,lag(cumprod(p),1)) ) %>% 
    mutate(lx = N  * cump) %>% 
    mutate(dx = lx * qx) %>% 
    summarise(life_exp = sum(cump))  %>% 
    ggplot(aes(x = year, y = life_exp, colour = country)) + 
    geom_line() + 
    scale_y_continuous(limits = c(70,85)) + 
    hrbrthemes::theme_ipsum()
```
