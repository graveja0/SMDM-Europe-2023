---
title: "Mortality Modeling"
format:
  revealjs:
    transition: fade
    background-transition: fade
    incremental: true 
    code-annotations: below
    footer: |
      [Back to Website](../index.html)
editor_options: 
  chunk_output_type: console
self-contained: true
bibliography: references.bib
---

```{r setup}
source("manifest.r")
```

## Learning Objectives

-   Understand options for modeling background mortality based on life tables and parametric mortality models.
-   Construct a cause-deleted life table to model cause-specific and non-cause-specific death.

## Approaches to Modeling Mortality

-   Standard approach is to draw from life table data
    -   `qx` is the probability of death within an interval.
    -   `mx` is the death rate within the interval.

## Life Table Data

```{r}
#| warning: false
#| message: false
#| echo: false
#| code-fold: false
#############################################
# Define Parameters for Life Table Modeling
#############################################
mort_year =  # Year to obtain from Human Mortality Database
  2019
N = # Population basis for life table
  100000
max_age =  # Max age in life table
  99
min_age =  # Min age in life table
  0
n_cycles =  # Number of discrete time (annual) cycles in Markov
  100

###############################
# Underlying Life-Table Data
###############################

lt <-  # Read in the U.S. life table data from the human mortality database.
  read_rds(here("_sandbox/mortality/usa-life-table.rds")) %>% 
  lifetable(.,series = "total", years = mort_year) %>% 
  as_tibble() %>% 
  mutate_at(vars(lx,dx), function(x) x*N) %>% 
  mutate(country = "USA") %>% 
  mutate(age = x)
```

```{r}
lt %>% 
  ungroup() %>% 
  select(-x) %>% 
  select(age,lx,dx,mx,qx) %>% 
  head() %>% 
  kable() %>% 
  kable_styling()
```

## Life Table Data

::: nonincremental
-   Death probabilities are useful for discrete time Markov models.
:::

```{r}
lt %>% 
  ungroup() %>% 
  select(-x) %>% 
  select(age,lx,dx,mx,qx) %>% 
  head() %>% 
  kable() %>% 
  kable_styling() %>% 
    column_spec(5, background = "#c6e6f5")

```

## Life Table Data

::: nonincremental
-   Death rates are useful for discrete event simulation (DES) models.
:::

```{r}
lt %>% 
  ungroup() %>% 
  select(-x) %>% 
  select(age,lx,dx,mx,qx) %>% 
  head() %>% 
  kable() %>% 
  kable_styling() %>% 
  column_spec(4, background = "#e8c6f5")

```

## Life Table-Based Mortality

::: nonincremental
-   A common approach is to use a life table-based lookup table in the model:
:::

```{r}
#| echo: TRUE
#| eval: FALSE
#| code-line-numbers: "2"
tpDn_lookup <-
        c("(34,44]" = 0.0017,  
          "(44,54]" = 0.0044,
          "(54,64]" = 0.0138,
          "(64,74]" = 0.0379,
          "(74,84]" = 0.0912,
          "(84,100]" = 0.1958)
```

-   Highlighted row: annual probability of death for 35-44 year old.

## Life Table-Basd Mortality

-   What if age bins are coarse (e.g., 0, 5, 10,... vs. 0,1,2,3,...)?
    -   Assume death probability/rate is constant within age bins (and cycles)?
-   In a DES model, we need to sample a time to death.
    -   Can sample from survival function in underlying life table.
-   Alternative: summarize/sample from background mortality using modeling.

## Modeling Mortality

-   Fit a parametric mortality model to the life table data.
-   Reduces dimensionality to a few parameters.
-   Use these parameters to sample time of death, obtain mortality rate/probability at any arbitrary time, etc.

## Modeling Mortality

::: {.callout-tip appearance="simple"}
The R packages `MortalityLaws` and `demography` facilitate life table data aquisition and modeling.
:::

## Obtaining Life Table Data

-   Human Mortality Database
-   Global Burden of Disease

## Processing Life Table Data

```{r}
#| echo: true
#| eval: false
hmd_usa <- demography::hmd.mx(
  "USA",
  username = "<<your user name>>", 
  password = "<<your password>>", "USA")
```

## Processing Life Table Data

```{r}
hmd_usa <- 
  readRDS(url("https://github.com/graveja0/SMDM-Europe-2023/raw/main/_learnr/smdm-europe-2023-cvd-model/www/usa-life-table.rds"))
```

```{r}
#| echo: true

mortality_year = 2019 # <1>
radix = 100000. # <2>

lt = 
  hmd_usa %>% 
  demography::lifetable(.,series = "total", years = mortality_year) %>% 
  as_tibble() %>% 
  rename(age = x) %>% 
  mutate_at(vars(lx,dx), function(x) x * radix) # <3> 
```
1. Define the mortality year to extract.
2. Define the number of individuals in a hypothetical cohort at the beginning of the life table.
3. `lx` and `dx` are originally specified in terms of a cohort of 1. We multiply by the radix to get the number living dying based on the specified radix.  

## Processing Life Table Data

```{r}
lt %>% 
  head() %>% 
  kable() %>% 
  kable_styling()
```

